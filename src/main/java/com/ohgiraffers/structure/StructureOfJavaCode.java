package com.ohgiraffers.structure;

/* 클래스 블록*/
public class StructureOfJavaCode {

    /* 메서드 블록 */
    /*

    [public | private | protected] [static] (리턴자료형 | void) 메소드명1 (입력자료형 매개변수, ...) {
        명령문(statement);
        ...
    }

    [public | private | protected] [static] (리턴자료형 | void) 메소드명2 (입력자료형 매개변수, ...) {
        명령문(statement);
        ...
    }
     */

    //...

    /* 자바 코드의 가장 바깥쪽 영역은 클래스 블록이다. 클래스명은 사용자 마음대로 지을 수 있다.
     * 단, 클래스명은 소스 파일 이름(예 : 클래스명.java)과 똑같이 사용해야 한다.
     * 그리고 클래스 블록은 여러 메서드 블록을 포함한다.*/

    /* [public | private | protected] 는 접근제어자로 public, private, protected가 오거나 아무것도 오지 않을 수 있다는 의미이다.
     *
     *  [static]은 static 키워드가 올 수도 있고 오지 않을 수도 있다는 의미이다. static이라는 키워드가 붙으면 static 메소드가 된다.
     *
     *  (리턴자료형 | void)는 메소드가 실행된 후 리턴되는 값의 자료형을 의미한다.
     *  리턴값이 있을 경우에는 반드시 리턴 자료형을 표기해야 하며, 만약 리턴값이 없는 경우라면 void로 표기해야 한다.
     *
     *  메소드명은 자유롭게 지을 수 있다.
     *  메소드명 뒤에 이어지는 괄호 안의 값들(입력자료형, 매개변수 등)은 메소드의 입력인자를 뜻한다.
     *  '입력자료형 + 매개변수명' 형태로 이루어지며 개수에 제한이 없다.
     * */

    /* 자바 코드에는 속성과 생성자도 구성요소로 포함된다. */

    private String message; // 속성

    public StructureOfJavaCode(String message) {
        this.message = message;                     // 생성자
    }

    /* [속성]은 클래스의 상태를 나타내는 변수로, 클래스 내부에서 선언된다.
     *  [생성자]는 클래스 인스턴스를 생성할때 실행되는 메소드로, 주로 속성을 초기화하는 용도로 사용한다. */

    /*      ┌─────────── 클래스 블록 ───────────┐
     *      │  ┌───────────┐   ┌───────────┐  │
     *      │  │           │   │           │  │
     *      │  │ 메소드 블록 │   │ 메소드 블록 │  │
     *      │  │ ┌───────┐ │   │ ┌───────┐ │  │  // 명령문은 여러 개 있을 수 있다.
     *      │  │ │ 명령문 │ │   │ │ 명령문 │ │  │
     *      │  │ └───────┘ │   │ └───────┘ │  │
     *      │  └───────────┘   └───────────┘  │
     *      └─────────────────────────────────┛
     * */
}

